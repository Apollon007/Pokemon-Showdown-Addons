diff --git a/app.js b/app.js
index d185a55..b91bcd9 100644
--- a/app.js
+++ b/app.js
@@ -379,10 +379,12 @@ global.CommandParser = require('./command-parser.js');
 
 global.Simulator = require('./simulator.js');
 
 global.Tournaments = require('./tournaments/frontend.js');
 
+global.Clans = require('./clans.js');
+
 try {
 	global.Dnsbl = require('./dnsbl.js');
 } catch (e) {
 	global.Dnsbl = {query:function (){}};
 }
diff --git a/config/commands.js b/config/commands.js
index 3e2066b..f013eb7 100644
--- a/config/commands.js
+++ b/config/commands.js
@@ -1632,10 +1632,154 @@ var commands = exports.commands = {
 			}
 		};
 	})(),
 
 	/*********************************************************
+	 * Clan commands
+	 *********************************************************/
+
+	clanshelp: function () {
+		if (!this.canBroadcast()) return false;
+		this.sendReplyBox(
+			"/clans [name] - Gets information about all clans, or about the specified clan<br />" +
+			"/clanwaravailable - Sets yourself as available for clan wars for 5 minutes<br />" +
+			"/createclan &lt;name> - Creates a clan<br />" +
+			"/deleteclan &lt;name> - Deletes a clan<br />" +
+			"/addclanmember &lt;clan>, &lt;user> - Adds a user to a clan<br />" +
+			"/removeclanmember &lt;clan>, &lt;user> - Removes a user from a clan<br />" +
+			"/startclanwar &lt;clan 1>, &lt;clan 2> - Starts a war between two clans<br />" +
+			"/endclanwar &lt;clan> - Ends a clan war forcibly<br />" +
+			"/getclanwarmatchups &lt;clan> - Shows the war battles that haven't yet been started<br />"
+		);
+	},
+
+	createclan: function (target) {
+		if (!this.can('clans')) return false;
+		if (target.length < 2)
+			this.sendReply("The clan's name is too short.");
+		else if (!Clans.createClan(target))
+			this.sendReply("Could not create the clan. Does it already exist?");
+		else
+			this.sendReply("Clan: " + target + " successfully created.");
+	},
+
+	deleteclan: function (target) {
+		if (!this.can('clans')) return false;
+		if (!Clans.createClan(target))
+			this.sendReply("Could not delete the clan. Does it exist or is it currently in a war?");
+		else
+			this.sendReply("Clan: " + target + " successfully deleted.");
+	},
+
+	clan: 'getclans',
+	clans: 'getclans',
+	getclan: 'getclans',
+	getclans: function (target) {
+		if (!this.canBroadcast()) return false;
+
+		var clan = Clans.getRating(target);
+		if (!clan) {
+			target = Clans.findClanFromMember(target);
+			if (target)
+				clan = Clans.getRating(target);
+		}
+		if (!clan) {
+			this.sendReplyBox(
+				"<strong>Clans:</strong><br />" +
+				Clans.getClans().map(function (clan) {
+					var result = Clans.getRating(clan);
+					result.name = clan;
+					return result;
+				}).sort(function (a, b) {
+					return b.rating - a.rating;
+				}).map(function (clan) {
+					return '<strong>' + Tools.escapeHTML(clan.name) + ':</strong> ' + clan.ratingName + " (" + clan.rating + ") " + clan.wins + "/" + clan.losses + "/" + clan.draws;
+				}).join('<br />')
+			);
+			return;
+		}
+
+		this.sendReplyBox(
+			'<strong>' + Tools.escapeHTML(Clans.getClanName(target)) + '</strong><br />' +
+			"<strong>Rating:</strong> " + clan.ratingName + " (" + clan.rating + ")<br />" +
+			"<strong>Wins/Losses/Draws:</strong> " + clan.wins + "/" + clan.losses + "/" + clan.draws + '<br />' +
+			"<strong>Members:</strong> " + Tools.escapeHTML(Clans.getMembers(target).sort().join(", "))
+		);
+	},
+
+	addclanmember: function (target) {
+		if (!this.can('clans')) return false;
+		var params = target.split(',');
+		if (params.length !== 2) return this.sendReply("Usage: /addclanmember clan, member");
+
+		var user = Users.getExact(params[1]);
+		if (!user || !user.connected) return this.sendReply("User: " + params[1] + " is not online.");
+
+		if (!Clans.addMember(params[0], params[1]))
+			this.sendReply("Could not add the user to the clan. Does the clan exist or is the user already in another clan?");
+		else {
+			this.sendReply("User: " + user.name + " successfully added to the clan.");
+			Rooms.rooms.lobby.add('|raw|<div class="clans-user-join">' + Tools.escapeHTML(user.name) + " has joined clan: " + Tools.escapeHTML(Clans.getClanName(params[0])) + '</div>');
+		}
+	},
+
+	removeclanmember: function (target) {
+		if (!this.can('clans')) return false;
+		var params = target.split(',');
+		if (params.length !== 2) return this.sendReply("Usage: /removeclanmember clan, member");
+
+		if (!Clans.removeMember(params[0], params[1]))
+			this.sendReply("Could not remove the user from the clan. Does the clan exist or has the user already been removed from it?");
+		else {
+			this.sendReply("User: " + params[1] + " successfully removed from the clan.");
+			Rooms.rooms.lobby.add('|raw|<div class="clans-user-join">' + Tools.escapeHTML(params[1]) + " has left clan: " + Tools.escapeHTML(Clans.getClanName(params[0])) + '</div>');
+		}
+	},
+
+	clanwaravailable: function (target, room, user) {
+		user.isClanWarAvailable = Date.now();
+		this.sendReply("You have been marked available for clan wars for 5 minutes.");
+	},
+
+	startclanwar: function (target, room) {
+		if (!this.can('clans')) return false;
+		var params = target.split(',');
+		if (params.length !== 2) return this.sendReply("Usage: /startclanwar clan 1, clan 2");
+
+		var matchups = Clans.startWar(params[0], params[1], room);
+		if (!matchups) return this.sendReply("Could not start the war. Do the two clans exist and have enough available members? Get the members to do /clanwaravailable");
+
+		room.add('|raw|' +
+			"<div class=\"clans-war-start\">A clan war between " + Tools.escapeHTML(Clans.getClanName(params[0])) + " and	" + Tools.escapeHTML(Clans.getClanName(params[1])) + " has started!</div>" +
+			Object.keys(matchups).map(function (m) { return "<strong>" + Tools.escapeHTML(matchups[m].from) + "</strong> vs <strong>" + Tools.escapeHTML(matchups[m].to); }).join('<br />')
+		);
+	},
+
+	endclanwar: function (target) {
+		if (!this.can('clans')) return false;
+		var war = Clans.findWarFromClan(target);
+		if (!war) return this.sendReply("The clan war does not exist. Has it already ended?");
+
+		var room = Clans.getWarRoom(target);
+		Clans.endWar(target);
+		room.add("|raw|<div class=\"clans-war-end\">The clan war between " + Tools.escapeHTML(war[0]) + " and " + Tools.escapeHTML(war[1]) + " has been forcibly ended.</div>");
+		this.sendReply("The clan war has been ended.");
+	},
+
+	getclanwarmatchups: function (target) {
+		if (!this.canBroadcast()) return false;
+		var war = Clans.findWarFromClan(target);
+		if (!war) return this.sendReply("The clan war does not exist.");
+
+		var matchups = Clans.getWarMatchups(target);
+		this.sendReplyBox(
+			"<strong>Clan war matchups between " + Tools.escapeHTML(war[0]) + " and " + Tools.escapeHTML(war[1]) + ':</strong><br />' +
+			Object.keys(matchups).map(function (m) { return mathcups[m].isEnded ? "" : '<strong>' + Tools.escapeHTML(matchups[m].from) + "</strong> vs <strong>" + Tools.escapeHTML(matchups[m].to); }).join('<br />')
+		);
+	},
+
+	/*********************************************************
 	 * Help commands
 	 *********************************************************/
 
 	comandos: 'help',
 	commands: 'help',
diff --git a/rooms.js b/rooms.js
index 8fcacf3..788c314 100644
--- a/rooms.js
+++ b/rooms.js
@@ -564,10 +564,36 @@ var BattleRoom = (function () {
 		} else {
 			this.log = this.log.concat(message);
 		}
 	};
 	BattleRoom.prototype.win = function (winner) {
+		if (Clans.setWarMatchResult(this.p1, this.p2, winner)) {
+			var result = "drawn";
+			if (toId(winner) === toId(this.p1))
+				result = "won";
+			else if (toId(winner) === toId(this.p2))
+				result = "lost";
+
+			var war = Clans.findWarFromClan(Clans.findClanFromMember(this.p1));
+			Clans.getWarRoom(war[0]).add('|raw|<div class="clans-war-battle-result">(' + Tools.escapeHTML(war[0]) + " vs " + Tools.escapeHTML(war[1]) + ") " + Tools.escapeHTML(this.p1) + " has " + result + " the clan war battle against " + Tools.escapeHTML(this.p2) + '</div>');
+
+			var room = Clans.getWarRoom(war[0]);
+			var warEnd = Clans.isWarEnded(war[0]);
+			if (warEnd) {
+				result = "drawn";
+				if (warEnd.result === 1)
+					result = "won";
+				else if (warEnd.result === 0)
+					result = "lost";
+				room.add('|raw|' +
+					'<div class="clans-war-end">' + Tools.escapeHTML(war[0]) + " has " + result + " the clan war against " + Tools.escapeHTML(war[1]) + '</div>' +
+					'<strong>' + Tools.escapeHTML(war[0]) + ':</strong> ' + warEnd.oldRatings[0] + " &rarr; " + warEnd.newRatings[0] + " (" + Clans.ratingToName(warEnd.newRatings[0]) + ")<br />" +
+					'<strong>' + Tools.escapeHTML(war[1]) + ':</strong> ' + warEnd.oldRatings[1] + " &rarr; " + warEnd.newRatings[1] + " (" + Clans.ratingToName(warEnd.newRatings[1]) + ")"
+				);
+			}
+		}
+
 		if (this.rated) {
 			var winnerid = toId(winner);
 			var rated = this.rated;
 			this.rated = false;
 			var p1score = 0.5;
